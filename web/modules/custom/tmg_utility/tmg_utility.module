<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\encrypt\Entity\EncryptionProfile;
use Drupal\tmg_utility\Form\VerificationForm;
use Drupal\tmg_utility\Form\UserPasswordResetForm;
use Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException;
use Drupal\Core\Url;
use Drupal\Core\Render\BubbleableMetadata;

/**
 * Implements hook_form_alter().
 */
function tmg_utility_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  switch ($form_id) {
    case 'webform_submission_verification_process_add_form':
      $form = VerificationForm::alter($form, $form_state);
      break;
    case 'webform_submission_user_password_reset_add_form':
      $form = UserPasswordResetForm::alter($form, $form_state);
      break;
  }
}

/**
 * Implements hook_tokens().
 */
function tmg_utility_tokens($type, $tokens, array $data, array $options, BubbleableMetadata $bubbleable_metadata) {
  $replacements = [];
  if ($type === 'user' && !empty($data['user'])) {
    $user = $data['user'];
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'forget_password_url':
          $request_time = \Drupal::time()->getCurrentTime();
          $encryption_profile = EncryptionProfile::load("site_encrypt_decrypt_profile");
          if (!$encryption_profile) {
            throw new AccessDeniedHttpException();
          }
          $data = $user->id() . ":" . $request_time;
          $hash  = \Drupal::service('encryption')->encrypt($data, $encryption_profile);

          $url = Url::fromRoute('tmg_utility.reset',
            [
              'hash' => $hash,
            ],
            [
              'absolute' => TRUE,
            ]
          )->toString();
          $replacements[$original] = $url;
          break;
      }
    }
  }
  return $replacements;
}

/**
 * Implements hook_token_info().
 */
function tmg_utility_token_info_alter(&$data) {
  $data['tokens']['user']['forget_password_url'] = [
    'name' => t("Forget password link"),
    'description' => t("Tokens related to forget password link."),
    'needs-data' => 'user',
  ];
}
