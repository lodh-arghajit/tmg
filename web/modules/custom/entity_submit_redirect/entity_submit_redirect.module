<?php
/**
 * @file
 * Entity submit redirect module main file. Contains basic functions and hooks.
 */

use Drupal\Core\Entity\ContentEntityForm;
use Drupal\Core\Form\FormStateInterface;


/**
 * Implements hook_form_alter().
 */
function entity_submit_redirect_form_alter(array &$form, FormStateInterface $formState) {
  // If it is an content entity form (create / edit forms)
  if ($formState->getFormObject() instanceof ContentEntityForm) {
    // Checking global conditions.
    if (entity_submit_redirect_check_conditions()) {
      $buttons = [
        'submit',
        'publish',
        'unpublish',
      ];

      foreach ($buttons as $button) {
        if (!empty($form['actions'][$button])) {
          $form['actions'][$button]['#submit'][] = 'entity_submit_redirect_form_submit';
        }
      }
    }
  }
}

/**
 * Submit handler.
 *
 * @param array $form
 *   Form.
 * @param \Drupal\Core\Form\FormStateInterface $formState
 *   Form state.
 */
function entity_submit_redirect_form_submit(array &$form, FormStateInterface $formState) {
  $config = \Drupal::config('entity_submit_redirect.settings');

  /** @var \Drupal\Core\Entity\ContentEntityForm $formObject */
  $formObject = $formState->getFormObject();
  /** @var \Drupal\Core\Entity\ContentEntityInterface $entity */
  $entity = $formObject->getEntity();

  $entityTypeId = $entity->getEntityTypeId();
  $bundle = $entity->bundle();

  $configs = [
    "$entityTypeId.$bundle.path",
    "$entityTypeId._default.path",
  ];

  foreach ($configs as $configId) {
    $redirect = $config->get($configId);
    if ($redirect) {
      $redirectUrl = entity_submit_redirect_get_redirectUrl($redirect);
      if ($redirectUrl) {
        $formState->setRedirectUrl($redirectUrl);
        break;
      }
    }
  }
}

/**
 * Check global conditions for redirect action.
 *
 * @return bool
 *   TRUE if conditions passed, FALSE otherwise.
 */
function entity_submit_redirect_check_conditions() {
  $result = TRUE;

  $config = \Drupal::config('entity_submit_redirect.settings');
  $useOn = $config->get('global.use_on');

  if (count($useOn) !== 2) {
    $route = \Drupal::routeMatch()->getRouteObject();
    $isAdmin = \Drupal::service('router.admin_context')->isAdminRoute($route);

    if ($isAdmin) {
      $result = !empty($useOn['backoffice']);
    }
    else {
      $result = !empty($useOn['front']);
    }
  }

  return $result;
}

/**
 * Converts user entered path into the URL.
 *
 * @param string $path
 *   Path to convert into the route.
 *
 * @return \Drupal\Core\Url|boolean
 *   Redirect URL.
 */
function entity_submit_redirect_get_redirectUrl($path) {
  /** @var \Drupal\Core\Url $url */
  return \Drupal::service('path.validator')->getUrlIfValid($path);
}
